name: release

on:
  push:
    branches:
      - main
      - '[0-9]+.[0-9]+.x'
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  release-please:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-22.04
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871

      - uses: googleapis/release-please-action@7987652d64b4581673a76e33ad5e98e3dd56832f
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  build-container:
    if: needs.release-please.outputs.releases_created == 'true'
    needs:
      - release-please
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      packages: write
      id-token: write
    env:
      IMAGE_TAG: ghcr.io/whizus-labs/kcd-backstage:${{ needs.release-please.outputs.tag_name }}
      IMAGE_FULL_NAME: ghcr.io/whizus-labs/kcd-backstage
      IMAGE_NAME: kcd-backstage
    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349

      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: "ghcr.io"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Cosign
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da

      - name: Build Docker Image
        id: docker_build_image
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          tags: |
            ${{ env.IMAGE_TAG }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          cache-from: type=gha,scope=${{ github.ref_name }}-${{ env.IMAGE_TAG }}
          cache-to: type=gha,scope=${{ github.ref_name }}-${{ env.IMAGE_TAG }}

      - name: Sign container image
        env:
          IMAGE_DIGEST: ${{ steps.docker_build_image.outputs.digest }}
        run: |
          cosign sign --yes ${{ env.IMAGE_FULL_NAME }}@${{ env.IMAGE_DIGEST }}
          cosign verify \
            --certificate-identity-regexp="https://github.com/WhizUs-Labs/kcd-showcase-backstage-application/.*" \
            --certificate-oidc-issuer="https://token.actions.githubusercontent.com" \
            ${{ env.IMAGE_FULL_NAME }}@${{ env.IMAGE_DIGEST }}

      - name: Generate SBOM
        uses: anchore/sbom-action@61119d458adab75f756bc0b9e4bde25725f86a7a
        with:
          image: ${{ env.IMAGE_TAG }}
          artifact-name: sbom-${{ env.IMAGE_NAME }}
          output-file: ./sbom-${{ env.IMAGE_NAME }}.spdx.json

      - name: Attach SBOM to release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191
        with:
          tag_name: ${{ needs.release-please.outputs.tag_name }}
          files: ./sbom-${{ env.IMAGE_NAME }}.spdx.json

      - name: Attest the Image with SBOM
        env:
          IMAGE_DIGEST: ${{ steps.docker_build_image.outputs.digest }}
        run: |
          echo "Attesting SBOM for this release and image..."
          cosign attest --yes --type spdxjson --predicate ./sbom-${{ env.IMAGE_NAME }}.spdx.json ${{ env.IMAGE_FULL_NAME }}@${{ env.IMAGE_DIGEST }}
          echo "Verifying that the attestation worked..."
          cosign verify-attestation --type spdxjson \
            --certificate-identity-regexp="https://github.com/WhizUs-Labs/kcd-showcase-backstage-application/.*" \
            --certificate-oidc-issuer="https://token.actions.githubusercontent.com" \
            --output-file ./cosign-attest-output.json \
            ${{ env.IMAGE_FULL_NAME }}@${{ env.IMAGE_DIGEST }}

      - name: Upload verification log as artifact
        uses: actions/upload-artifact@604373da6381bf24206979c74d06a550515601b9
        with:
          name: cosign-attest-verification-log
          path: ./cosign-attest-output.json
