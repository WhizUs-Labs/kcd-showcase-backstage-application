apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-new-kcd-showcase-app
  title: Create a new KCD showcase app
  description: Clones the base KCD showcase app into a new repository to create a new app.
spec:
  owner: user:singhmanavjot
  type: service
  parameters:
    - title: Fill in required metadata
      required:
        - name
      properties:
        name:
          title: App Name
          type: string
          descripton: Name of the app
          ui:autofocus: true
          ui:options:
            rows: 5
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: [Group, User]
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedOwners:
              - WhizUs-Labs
            allowedHosts:
              - github.com
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: https://github.com/WhizUs-Labs/kcd-showcase-trw-demo-app
        values:
          name: ${{ parameters.name }}
          owner: ${{ parameters.owner }}
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
    - id: github-action
      name: Trigger GitHub Action
      action: github:actions:dispatch
      input:
        workflowId: onboard-app.yaml
        repoUrl: github.com?repo=kcd-showcase-service-cluster-template-gitops&owner=WhizUs-Labs
        branchOrTagName: 'main'
        workflowInputs:
          name: ${{ parameters.name }}
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
